"use strict";(self.webpackChunksandbox_fusion=self.webpackChunksandbox_fusion||[]).push([[2835],{14258:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var r=n(74848),i=n(28453);const o={},s="JavaScript & TypeScript",c={id:"docs/reference/execution-detail/node",title:"JavaScript & TypeScript",description:"Version: NodeJS 20.11.0, jest 29.7.0, typescript 5.3.3",source:"@site/docs/docs/reference/execution-detail/node.md",sourceDirName:"docs/reference/execution-detail",slug:"/docs/reference/execution-detail/node",permalink:"/SandboxFusion/docs/docs/reference/execution-detail/node",draft:!1,unlisted:!1,editUrl:"https://github.com/bytedance/SandboxFusion/tree/main/docs/docs/docs/reference/execution-detail/node.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Lean",permalink:"/SandboxFusion/docs/docs/reference/execution-detail/lean"},next:{title:"Others",permalink:"/SandboxFusion/docs/docs/reference/execution-detail/others"}},d={},a=[{value:"JavaScript",id:"javascript",level:2},{value:"TypeScript",id:"typescript",level:2},{value:"Jest",id:"jest",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"javascript--typescript",children:"JavaScript & TypeScript"})}),"\n",(0,r.jsx)(t.p,{children:"Version: NodeJS 20.11.0, jest 29.7.0, typescript 5.3.3"}),"\n",(0,r.jsxs)(t.p,{children:["Both JavaScript and TypeScript run on the same NodeJS environment. For project environment details, refer to ",(0,r.jsx)(t.a,{href:"https://github.com/bytedance/SandboxFusion/tree/main/runtime/node",children:"this link"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"The sandbox environment includes a headless browser that can work with the puppeteer library to perform more complex frontend testing."}),"\n",(0,r.jsx)(t.h2,{id:"javascript",children:"JavaScript"}),"\n",(0,r.jsxs)(t.p,{children:["For the ",(0,r.jsx)(t.code,{children:"nodejs"})," language, after the project environment is installed, the ",(0,r.jsx)(t.code,{children:"node_modules"})," will be symbolically linked to the temporary directory containing the input code snippet. Then it executes ",(0,r.jsx)(t.code,{children:"node <filename>"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"typescript",children:"TypeScript"}),"\n",(0,r.jsxs)(t.p,{children:["For the ",(0,r.jsx)(t.code,{children:"typescript"})," language, the execution environment is handled the same as JavaScript above, but the entry command is ",(0,r.jsx)(t.code,{children:"tsx <filename>"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"jest",children:"Jest"}),"\n",(0,r.jsxs)(t.p,{children:["For the ",(0,r.jsx)(t.code,{children:"jest"})," language, the sandbox will transfer the complete project (including node_modules, package.json, babel.config.js) to a temporary directory, write the input code snippet to ",(0,r.jsx)(t.code,{children:"tmpxxx.test.ts"}),", and then execute ",(0,r.jsx)(t.code,{children:"npm run test"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);